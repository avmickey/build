{"version":3,"file":"static/js/687.f174ed0d.chunk.js","mappings":"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","sources":["Pages/Basket/components/ProductBasket/ProductBasket.tsx","Pages/Basket/components/BasketBodyOne/BasketBodyOne.tsx","Pages/Basket/components/SaleBlock/SaleBlock.tsx","Pages/Basket/components/TotalPrice/TotalPrice.tsx","Pages/Basket/Basket.tsx","UI/Input/OtherInput.tsx"],"sourcesContent":["import './style/ProductBasket.scss';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { ReactComponent as Heart } from '../../../../img/icons/heart.svg';\r\nimport { ReactComponent as X } from '../../../../img/icons/x.svg';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useFetching } from '../../../../http/shopAPI';\r\nimport useLoading from '../../../../Hooks/useLoading';\r\nimport { DeviceConfigAll } from '../../../../mobx/GlobalState.config';\r\nimport { API_URL } from '../../../../components/Routers/links';\r\nimport { TypeGoods } from '../BasketPieces.conf';\r\nimport { remove } from '../../../../http/basketAPI';\r\nimport { Context } from '../../../..';\r\nimport { BtnBasket, btnHOC } from '../../../../UI/ProductBtn/ProductBtn';\r\nimport HeartBtn from '../../../../UI/HeartBtn/HeartBtn';\r\n\r\nexport const ProductBasket = observer(({ product }: TypeGoods) => {\r\n  const { basket } = useContext(Context);\r\n  const router = useNavigate();\r\n  const [item, setItem] = useState<DeviceConfigAll | null>(null!);\r\n  const [, fetching] = useLoading(async () => {\r\n    const response = await useFetching.getOne(product.id);\r\n    setItem(response);\r\n  });\r\n  const Btn = btnHOC(BtnBasket);\r\n  useEffect(() => {\r\n    fetching();\r\n  }, []);\r\n\r\n  const clean = async () => {\r\n    const arrowgo = document.querySelector('.basket__price') as HTMLElement;\r\n    const response = await remove(product.id);\r\n    basket.setProducts = response.devices;\r\n    response.devices.length < 1 && router('/shop');\r\n\r\n    if (response.devices.length == 1) {\r\n      console.log(1);\r\n\r\n      arrowgo?.classList.remove('bottom');\r\n      arrowgo?.classList.remove('show');\r\n      arrowgo?.classList.remove('showtwo');\r\n    }\r\n  };\r\n\r\n  const route = () => {\r\n    router(`/basket/${product.id}`);\r\n    document.documentElement.scrollIntoView(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productbasket__item\">\r\n      <div className=\"productbasket__first\">\r\n        <div className=\"productbasket__blockimg\" onClick={route}>\r\n          <div\r\n            className=\"productbasket__img \"\r\n            style={{\r\n              backgroundImage: `url(${API_URL}${\r\n                Array.from(\r\n                  Object.values(JSON.parse(item?.deviceimg.img || '{}'))\r\n                )[0]\r\n              })`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"productbasket__second\">\r\n        <div className=\"productbasket__text\">\r\n          <div className=\"productbasket__name\">\r\n            <p className=\"basket\">\r\n              {item && item?.name.length <= 20\r\n                ? item?.name\r\n                : item?.name\r\n                    .split('')\r\n                    .filter((item, index) => index <= 20)\r\n                    .join('') + '...'}\r\n            </p>\r\n          </div>\r\n          <div className=\"productbasket__category\">\r\n            <p className=\"mini basket\">{item?.brand.name}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"productbasket__btnfirst\">\r\n          <Btn product={product} />\r\n        </div>\r\n      </div>\r\n      <div className=\"productbasket__btnsecond\">\r\n        <Btn product={product} />\r\n      </div>\r\n      <div className=\"productbasket__midst\">\r\n        <div className=\"productbasket__price\">\r\n          {basket.getSale != 0 && (\r\n            <p className=\"big sale\">{`$${\r\n              +product?.price * product.quantity -\r\n              ((+product?.price * product.quantity) / 100) *\r\n                (basket.getSale + +product?.sale)\r\n            }`}</p>\r\n          )}\r\n          {product.sale > 0 && basket.getSale <= 0 ? (\r\n            <>\r\n              <p className={'basket newcols big'}>{`$${\r\n                +product?.price * product?.quantity -\r\n                ((+product?.price * product?.quantity) / 100) * product.sale\r\n              }`}</p>\r\n              <p className={'basket through mini'}>{`$${\r\n                +product?.price * product?.quantity\r\n              }`}</p>\r\n            </>\r\n          ) : (\r\n            <p\r\n              className={basket.getSale != 0 ? 'mini old basket' : 'big basket'}\r\n            >{`$${+product?.price * product?.quantity}`}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"productbasket__end\">\r\n        <HeartBtn id={product.id} />\r\n        <div onClick={clean} className=\"productbasket__delete\">\r\n          <X />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { ProductBasket } from '../ProductBasket/ProductBasket';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../../../..';\r\nimport { BasketDeviceConfig } from '../../../../mobx/GlobalState.config';\r\n\r\nexport const BasketBodyOne: React.FC = observer(() => {\r\n  const { basket } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"productbasket__goods\">\r\n      {basket.getProducts.map((item: BasketDeviceConfig) => {\r\n        return <ProductBasket product={item} key={item.id} />;\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useContext, useEffect } from 'react';\r\nimport { FieldValues, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Context } from '../../../..';\r\nimport { Button } from '../../../../UI/Button/Button';\r\nimport OtherInpurt from '../../../../UI/Input/OtherInput';\r\nimport './style/SaleBlock.scss';\r\n\r\nconst SaleBlock: React.FC = observer(() => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    setValue,\r\n  } = useForm({ mode: 'onChange' });\r\n  const { basket } = useContext(Context);\r\n  const submit: SubmitHandler<FieldValues> = () => {\r\n    if (basket.getSale > 0) {\r\n      basket.setSale = 0;\r\n      setValue('code', '');\r\n    } else {\r\n      basket.setSale = 10;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (basket.getSale > 0) {\r\n      setValue('code', 'abcAD55');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className=\"setsale\">\r\n      <div className=\"setsale__input\">\r\n        <OtherInpurt\r\n          register={register}\r\n          type=\"text\"\r\n          setValue={setValue}\r\n          errors={errors}\r\n          name=\"code\"\r\n          textFiled=\"Promocode\"\r\n        />\r\n      </div>\r\n      <div className=\"setsale__btn\">\r\n        <Button name=\"sale\">\r\n          <p className=\"mini\">{basket?.getSale != 0 ? 'delete' : 'apply'}</p>\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default SaleBlock;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../../../..';\r\nimport './style/TotalPrice.scss';\r\n\r\nexport const TotalPrice: React.FC = observer(() => {\r\n  const { basket } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"totalprice\">\r\n      {basket.getSale != 0 ? (\r\n        <>\r\n          <div className=\"totalprice__price totalprice__block\">\r\n            <div className=\"totalprice__text\">\r\n              <p className=\"mini\">Price without discount</p>\r\n            </div>\r\n            <div className=\"totalprice__number\">\r\n              <p className=\"basket\">{`${basket.sum}$`}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"totalprice__sale totalprice__block\">\r\n            <div className=\"totalprice__text\">\r\n              <p className=\"mini\">Discount</p>\r\n            </div>\r\n            <div className=\"totalprice__number\">\r\n              <p className=\"mini\">10%</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"totalprice__total totalprice__block\">\r\n            <div className=\"totalprice__text\">\r\n              <p className=\"mini\">Total </p>\r\n            </div>\r\n            <div className=\"totalprice__number\">\r\n              <p className=\" sale\">{`${basket.sumSale}$`}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"totalprice__total notprice totalprice__block\">\r\n          <div className=\"totalprice__text\">\r\n            <p className=\"mini\">Price without discount </p>\r\n          </div>\r\n          <div className=\"totalprice__number\">\r\n            <p>{`${basket.sum}$`}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import './style/Basket.scss';\r\nimport { useEffect } from 'react';\r\nimport { ReactComponent as Cart } from '../../img/icons/cart.svg';\r\nimport { BasketBodyOne } from './components/BasketBodyOne/BasketBodyOne';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../..';\r\nimport { observer } from 'mobx-react-lite';\r\nimport SaleBlock from './components/SaleBlock/SaleBlock';\r\nimport { TotalPrice } from './components/TotalPrice/TotalPrice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { clear } from '../../http/basketAPI';\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\nconst Basket = observer(() => {\r\n  const { basket } = useContext(Context);\r\n  const router = useNavigate();\r\n\r\n  useEffect(() => {\r\n    document.title = `Basket`;\r\n  }, []);\r\n\r\n  const clean = async () => {\r\n    await clear();\r\n    basket.clear();\r\n    router('/shop');\r\n  };\r\n\r\n  return (\r\n    <div className=\"basket  indent_last\">\r\n      <div className=\"container\">\r\n        <div className=\"basket__row\">\r\n          <div className=\"pageonebas__header\">\r\n            <div className=\"pageonebas__logo\">\r\n              <div className=\"pageonebas__img\">\r\n                <Cart />\r\n              </div>\r\n              <div className=\"pageonebas__title\">\r\n                <h3>Basket</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"pageonebas__clear\">\r\n              <p onClick={clean} className=\"mini\">\r\n                Clear for basket\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"pageonebas\">\r\n            <BasketBodyOne />\r\n\r\n            <div className=\"basket__aside scroll\" data-sale>\r\n              <div className=\"basket__price\">\r\n                <SaleBlock />\r\n\r\n                <TotalPrice />\r\n                <div className=\"pageonebas__btn\">\r\n                  <Button name=\"sign\">\r\n                    <p className=\"mini\">make an order</p>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Basket;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Context } from '../..';\r\nimport InputErrFoot from './components/InputErrFoot';\r\nimport { change, focus, renderInput } from './components/inputFocus';\r\nimport { valid } from './components/validate';\r\nimport { InputFiledTypes } from './Input.config';\r\nimport './style/Input.scss';\r\n\r\nexport default function OtherInpurt({\r\n  type,\r\n  register,\r\n  name,\r\n  errors,\r\n  setValue,\r\n  textFiled,\r\n}: InputFiledTypes) {\r\n  const err: string = errors[name] && (errors[name]?.message || 'Error');\r\n  const { basket } = useContext(Context);\r\n\r\n  const changeSale = (e) => {\r\n    if (basket.getSale > 0) setValue(name, 'aaa');\r\n    else change(e, setValue, name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"inputFiled\">\r\n      <div\r\n        className={\r\n          basket.setSale > 0\r\n            ? 'inputFiled__block sale '\r\n            : 'inputFiled__block old all'\r\n        }\r\n      >\r\n        <div className=\"inputFiled__text old all\">\r\n          <p className=\"mini\">{textFiled}</p>\r\n        </div>\r\n        <input\r\n          {...register(name, {\r\n            required: 'Field must be filled',\r\n            pattern: valid(type, name),\r\n          })}\r\n          onChange={(e) => changeSale(e)}\r\n          onFocus={focus}\r\n          onBlur={focus}\r\n          type={type}\r\n        />\r\n      </div>\r\n      {/* {err && <InputErrFoot err={err} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AllInpurt({\r\n  type,\r\n  register,\r\n  name,\r\n  setValue,\r\n  textFiled,\r\n}: InputFiledTypes) {\r\n  useEffect(() => {\r\n    renderInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"inputFiled\">\r\n      <div className={'inputFiled__block old all'}>\r\n        <div className=\"inputFiled__text old all\">\r\n          <p className=\"mini\">{textFiled}</p>\r\n        </div>\r\n        <input\r\n          {...register(name, {\r\n            required: 'Field must be filled',\r\n            pattern: valid(type, name),\r\n          })}\r\n          onChange={(e) => change(e, setValue, name)}\r\n          onFocus={focus}\r\n          onBlur={focus}\r\n          type={type}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ProductBasket","observer","product","basket","useContext","Context","router","useNavigate","useState","item","setItem","useLoading","useFetching","id","response","fetching","Btn","btnHOC","BtnBasket","useEffect","clean","arrowgo","document","querySelector","remove","setProducts","devices","length","console","log","classList","className","onClick","documentElement","scrollIntoView","style","backgroundImage","API_URL","Array","from","Object","values","JSON","parse","deviceimg","img","name","split","filter","index","join","brand","getSale","price","quantity","sale","HeartBtn","BasketBodyOne","getProducts","map","useForm","mode","register","errors","formState","handleSubmit","setValue","onSubmit","setSale","type","textFiled","Button","TotalPrice","sum","sumSale","Basket","title","clear","OtherInpurt","message","renderInput","required","pattern","valid","onChange","e","change","changeSale","onFocus","focus","onBlur","AllInpurt"],"sourceRoot":""}